openapi: 3.0.0
info:
  description: '[DRAFT] Backend API for Folio data loading management'
  version: 1.0.0
  title: Folio Data Loading Management API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/status:
    get:
      summary: A healthcheck endpoint
      responses:
        '200':
          description: The status of the service
  /api/dataload_jobs:
    get:
      summary: Retrieve the list of scheduled data loading jobs
      description: Provide a list of jobs to run since the last request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLoadJobsResponse'
  '/api/dataload_jobs/{id}':
    put:
      summary: Update job status
      responses:
        '204':
          description: Accepted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The dataload_job_id for the job being updated
      requestBody:
        description: Data payload for job status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLoadJobResult'
components:
  schemas:
    DataLoadJob:
      description: Information used to schedule a data load job in the pipeline
      type: object
      additionalProperties: true
      properties:
        id:
          type: integer
          description: The id of the dataload_job in order to allow for updates
        organization_folio_id:
          $ref: '#/components/schemas/UUID'
        interface_id:
          $ref: '#/components/schemas/UUID'
        dataload_profile_id:
          $ref: '#/components/schemas/UUID'
        processing_tasks:
          type: array
          items:
            type: string
        filename:
          type: string
        file_pattern:
          type: string
        created_by:
          type: string
          description: The sunetid of the scheduling user
        additional_contacts:
          type: array
          items:
            type: string
          description: An array of email addresses to include in any notifications.
      required:
        - id
        - organization_folio_id
        - dataload_profile_id
    DataLoadJobsResponse:
      description: List of jobs to be scheduled
      type: object
      additionalProperties: false
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/DataLoadJob'
    DataLoadJobResult:
      description: Statistics and results of a data load job
      type: object
      additionalProperties: false
      properties:
        organization_folio_id:
          $ref: '#/components/schemas/UUID'
        dag_run_id:
          $ref: '#/components/schemas/UUID'
        filename:
          type: string
        status:
          type: string
          enum: [queued, in_progress, failed, completed]
      required:
        - status
    UUID:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      # the regex above limits the length;
      # however, some tools might require explicit settings:
      minLength: 36
      maxLength: 36
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: http-token-auth
security:
  - bearerAuth: []
